name: Le pipeline

on:
  push:
    branches:
      - main

jobs:
  tests:
    runs-on: self-hosted

    strategy:
      fail-fast: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js  
        uses: actions/setup-node@v4.1.0  
        with:  
          node-version: '18.x'

      - name: Install nmp dependencies
        working-directory: angular-docker
        run: | 
            npm install
            apt install ng-common


      - name: Unit tests  
        working-directory: angular-docker
        run: ng test

      - name: Scan Sonarqube
        run: |
           sonar-scanner \
           -Dsonar.projectKey="Angular" \
           -Dsonar.sources=. \
           -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
           -Dsonar.login=${{ secrets.SONAR_TOKEN }} 
      - name: Sonarqube Quality Gate
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        with:
          scanMetadataReportFile: ./.scannerwork/report-task.txt
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  build:
    runs-on: ubuntu-latest
    needs: tests

    strategy:
      fail-fast: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker builder
        uses: docker/setup-buildx-action@v3

      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD_WRITE }}

      - name: Build and push Docker 
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_TAG }}
  deploy:
    needs: build
    runs-on: self-hosted

    steps:
      - name: Connexion et DÃ©ploiment
        run: >
          ssh ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}
          "
          docker stop angular-prod || true
          docker rm angular-prod || true
          docker run -d -p 9003:9001 --network devops --name angular-prod --pull-always ${{ secrets.DOCKER_TAG }}
          exit
          "